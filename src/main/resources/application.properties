
server.port = 8080
#persist the data  
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false

#spring.datasource.url=jdbc:h2:mem:dcbapp
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.use_sql_comments=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.datasource.initialization-mode=always
#spring.datasource.schema=schema.sql
#spring.datasource.data=schema.sql


spring.datasource.url=jdbc:h2:mem:workflowtestdb34
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
#spring.datasource.initialization-mode=always
#spring.datasource.schema=classpath:spring-boot-Json-xml-database-example/src/main/resources/schema.sql
#spring.datasource.data=classpath:spring-boot-Json-xml-database-example/src/main/resources/schema.sql
#spring.batch.initialize-schema=always
spring.datasource.initialize-mode=always
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create


# Kafka Producer configuration
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Kafka Consumer configuration
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=my-consumer-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Kafka topic configuration (optional)
spring.kafka.listener.concurrency=3

# Enable Feign Clients
feign.hystrix.enabled=true

# If you're using service discovery with Eureka
spring.cloud.discovery.enabled=false  # Disable discovery if not using Eureka

# If Claim Service is running locally on port 8081
claim-service.url=http://localhost:8081
